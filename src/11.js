// Инкапсуляция - это концепция позволяющая скрыть внутренние детали кла
// Пользователь класса должен получать доступ только к публичному интерфейсу
//  - набору публичных свойств и методов класса.

// В классах инкапсуляция реализуется приватными свойствами, доступ к
//  которым можно получить только внутри класса.
//  Это одно из отличий классов и функций-конструкторов - в классах легко объявить приватные свойства.

// Допустим почта пользователя должна быть недоступна из вне,
//  то есть приватна. Добавляя к имени свойства символ # мы делаем его приватным. 
//  Объявление приватного свойства до инциализации в конструкторе - обязательно.

'use strict'
// Приватные свойства
class Car {
    #brand
    
    constructor({ brand, model, price }) {
      this.#brand = brand;
      this.model = model;
      this.price = price;
    }
    getBrand(){  
    return this.#brand;
    }
    changeBrand(newBrand){
    this.#brand = newBrand;
    }
  }